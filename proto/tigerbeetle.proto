syntax = "proto3";

package proto;

option go_package = "tigerbeetle_grpc/proto";
option java_multiple_files = true;
option java_package = "nl.last.li.tigerbeetle_grpc.proto";
option java_outer_classname = "TigerBeetleProto";

service TigerBeetle {
  rpc GetID (GetIDRequest) returns (GetIDReply) {}
  rpc CreateAccounts(CreateAccountsRequest) returns (CreateAccountsReply) {}
  rpc CreateTransfers(CreateTransfersRequest) returns (CreateTransfersReply) {}
  rpc LookupAccounts(LookupAccountsRequest) returns (LookupAccountsReply) {}
  rpc LookupTransfers(LookupTransfersRequest) returns (LookupTransfersReply) {}
  rpc GetAccountTransfers(GetAccountTransfersRequest) returns (GetAccountTransfersReply) {}
  rpc GetAccountHistory(GetAccountHistoryRequest) returns (GetAccountHistoryReply) {}
}

message GetIDRequest { 
}
message GetIDReply {
  string id = 1;
}

message CreateAccountsRequest {
  repeated Account accounts = 1;
}
message CreateAccountsReply {
  repeated string results = 1;
}
message CreateTransfersRequest {
  repeated Transfer transfers = 1;

}
message CreateTransfersReply {
  repeated string results = 1;
}
message LookupAccountsRequest {
  repeated string account_ids = 1;
}
message LookupAccountsReply {
  repeated Account accounts = 1;
}
message LookupTransfersRequest {
  repeated string transfer_ids = 1;
}
message LookupTransfersReply {
  repeated Transfer transfers = 1;
}
message GetAccountTransfersRequest {
  AccountFilter filter = 1;
}
message GetAccountTransfersReply {
  repeated Transfer transfers = 1;
}
message GetAccountHistoryRequest {
  AccountFilter filter = 1;
}
message GetAccountHistoryReply {
  repeated AccountBalance account_balances = 1;
}


// Types
// ----------------------------------------------------------------
message Account {
  string id = 1;
  int64 debits_pending = 2;
  int64	debits_posted = 3;
  int64	credits_pending = 4;
  int64	credits_posted = 5;
  int64 user_data128 = 6;
  int64	user_data64 = 7;
  int32	user_data32 = 8;
  int64 ledger = 9;
  int32	code = 10;
  AccountFlags flags = 11;
  string timestamp = 12;
}

message AccountFlags {
  optional bool linked                         = 1;
  optional bool debits_must_not_exceed_credits = 2;
  optional bool credits_must_not_exceed_debits = 3;
  optional bool history                        = 4;
}

message Transfer {
  string id = 1;
  string debit_account_id = 2;
  string credit_account_id = 3;
  int64 amount = 4;
  optional string pending_id = 5;
  int64 user_data128 = 6;
  int64	user_data64 = 7;
  int32	user_data32 = 8;
  int64 ledger = 9;
  int32 code = 10;
  TransferFlags transfer_flags = 11;
  optional string timestamp = 13;
}

message TransferFlags {
  optional bool linked = 1;
  optional bool pending = 2;
  optional bool post_pending_transfer = 3;
  optional bool void_pending_transfer = 4;
  optional bool balancing_debit = 5;
  optional bool balancing_credit = 6;
}

message AccountFilter {
  string account_id = 1;
  optional string timestamp_min = 2;
  optional string timestamp_max = 3;
  int32 limit = 4;
  optional AccountFilterFlags flags      = 5;
}

message AccountFilterFlags {
  optional bool debits = 1;                     
  optional bool credits = 2; 
  optional bool reserved = 3; 
}

message AccountBalance {
  int64 debits_pending = 1;
  int64 debits_posted = 2;
  int64 credits_pending = 3;
  int64 credits_posted = 4;
  string timestamp = 5;
}