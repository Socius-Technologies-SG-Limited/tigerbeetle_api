// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.0
// source: proto/tigerbeetle.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAccountResult int32

const (
	CreateAccountResult_AccountOK                                   CreateAccountResult = 0
	CreateAccountResult_AccountLinkedEventFailed                    CreateAccountResult = 1
	CreateAccountResult_AccountLinkedEventChainOpen                 CreateAccountResult = 2
	CreateAccountResult_AccountImportedEventExpected                CreateAccountResult = 22
	CreateAccountResult_AccountImportedEventNotExpected             CreateAccountResult = 23
	CreateAccountResult_AccountTimestampMustBeZero                  CreateAccountResult = 3
	CreateAccountResult_AccountImportedEventTimestampOutOfRange     CreateAccountResult = 24
	CreateAccountResult_AccountImportedEventTimestampMustNotAdvance CreateAccountResult = 25
	CreateAccountResult_AccountReservedField                        CreateAccountResult = 4
	CreateAccountResult_AccountReservedFlag                         CreateAccountResult = 5
	CreateAccountResult_AccountIDMustNotBeZero                      CreateAccountResult = 6
	CreateAccountResult_AccountIDMustNotBeIntMax                    CreateAccountResult = 7
	CreateAccountResult_AccountExistsWithDifferentFlags             CreateAccountResult = 15
	CreateAccountResult_AccountExistsWithDifferentUserData128       CreateAccountResult = 16
	CreateAccountResult_AccountExistsWithDifferentUserData64        CreateAccountResult = 17
	CreateAccountResult_AccountExistsWithDifferentUserData32        CreateAccountResult = 18
	CreateAccountResult_AccountExistsWithDifferentLedger            CreateAccountResult = 19
	CreateAccountResult_AccountExistsWithDifferentCode              CreateAccountResult = 20
	CreateAccountResult_AccountExists                               CreateAccountResult = 21
	CreateAccountResult_AccountFlagsAreMutuallyExclusive            CreateAccountResult = 8
	CreateAccountResult_AccountDebitsPendingMustBeZero              CreateAccountResult = 9
	CreateAccountResult_AccountDebitsPostedMustBeZero               CreateAccountResult = 10
	CreateAccountResult_AccountCreditsPendingMustBeZero             CreateAccountResult = 11
	CreateAccountResult_AccountCreditsPostedMustBeZero              CreateAccountResult = 12
	CreateAccountResult_AccountLedgerMustNotBeZero                  CreateAccountResult = 13
	CreateAccountResult_AccountCodeMustNotBeZero                    CreateAccountResult = 14
	CreateAccountResult_AccountImportedEventTimestampMustNotRegress CreateAccountResult = 26
)

// Enum value maps for CreateAccountResult.
var (
	CreateAccountResult_name = map[int32]string{
		0:  "AccountOK",
		1:  "AccountLinkedEventFailed",
		2:  "AccountLinkedEventChainOpen",
		22: "AccountImportedEventExpected",
		23: "AccountImportedEventNotExpected",
		3:  "AccountTimestampMustBeZero",
		24: "AccountImportedEventTimestampOutOfRange",
		25: "AccountImportedEventTimestampMustNotAdvance",
		4:  "AccountReservedField",
		5:  "AccountReservedFlag",
		6:  "AccountIDMustNotBeZero",
		7:  "AccountIDMustNotBeIntMax",
		15: "AccountExistsWithDifferentFlags",
		16: "AccountExistsWithDifferentUserData128",
		17: "AccountExistsWithDifferentUserData64",
		18: "AccountExistsWithDifferentUserData32",
		19: "AccountExistsWithDifferentLedger",
		20: "AccountExistsWithDifferentCode",
		21: "AccountExists",
		8:  "AccountFlagsAreMutuallyExclusive",
		9:  "AccountDebitsPendingMustBeZero",
		10: "AccountDebitsPostedMustBeZero",
		11: "AccountCreditsPendingMustBeZero",
		12: "AccountCreditsPostedMustBeZero",
		13: "AccountLedgerMustNotBeZero",
		14: "AccountCodeMustNotBeZero",
		26: "AccountImportedEventTimestampMustNotRegress",
	}
	CreateAccountResult_value = map[string]int32{
		"AccountOK":                                   0,
		"AccountLinkedEventFailed":                    1,
		"AccountLinkedEventChainOpen":                 2,
		"AccountImportedEventExpected":                22,
		"AccountImportedEventNotExpected":             23,
		"AccountTimestampMustBeZero":                  3,
		"AccountImportedEventTimestampOutOfRange":     24,
		"AccountImportedEventTimestampMustNotAdvance": 25,
		"AccountReservedField":                        4,
		"AccountReservedFlag":                         5,
		"AccountIDMustNotBeZero":                      6,
		"AccountIDMustNotBeIntMax":                    7,
		"AccountExistsWithDifferentFlags":             15,
		"AccountExistsWithDifferentUserData128":       16,
		"AccountExistsWithDifferentUserData64":        17,
		"AccountExistsWithDifferentUserData32":        18,
		"AccountExistsWithDifferentLedger":            19,
		"AccountExistsWithDifferentCode":              20,
		"AccountExists":                               21,
		"AccountFlagsAreMutuallyExclusive":            8,
		"AccountDebitsPendingMustBeZero":              9,
		"AccountDebitsPostedMustBeZero":               10,
		"AccountCreditsPendingMustBeZero":             11,
		"AccountCreditsPostedMustBeZero":              12,
		"AccountLedgerMustNotBeZero":                  13,
		"AccountCodeMustNotBeZero":                    14,
		"AccountImportedEventTimestampMustNotRegress": 26,
	}
)

func (x CreateAccountResult) Enum() *CreateAccountResult {
	p := new(CreateAccountResult)
	*p = x
	return p
}

func (x CreateAccountResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateAccountResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tigerbeetle_proto_enumTypes[0].Descriptor()
}

func (CreateAccountResult) Type() protoreflect.EnumType {
	return &file_proto_tigerbeetle_proto_enumTypes[0]
}

func (x CreateAccountResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateAccountResult.Descriptor instead.
func (CreateAccountResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{0}
}

type CreateTransferResult int32

const (
	CreateTransferResult_TransferOK                                              CreateTransferResult = 0
	CreateTransferResult_TransferLinkedEventFailed                               CreateTransferResult = 1
	CreateTransferResult_TransferLinkedEventChainOpen                            CreateTransferResult = 2
	CreateTransferResult_TransferImportedEventExpected                           CreateTransferResult = 56
	CreateTransferResult_TransferImportedEventNotExpected                        CreateTransferResult = 57
	CreateTransferResult_TransferTimestampMustBeZero                             CreateTransferResult = 3
	CreateTransferResult_TransferImportedEventTimestampOutOfRange                CreateTransferResult = 58
	CreateTransferResult_TransferImportedEventTimestampMustNotAdvance            CreateTransferResult = 59
	CreateTransferResult_TransferReservedFlag                                    CreateTransferResult = 4
	CreateTransferResult_TransferIDMustNotBeZero                                 CreateTransferResult = 5
	CreateTransferResult_TransferIDMustNotBeIntMax                               CreateTransferResult = 6
	CreateTransferResult_TransferExistsWithDifferentFlags                        CreateTransferResult = 36
	CreateTransferResult_TransferExistsWithDifferentPendingID                    CreateTransferResult = 40
	CreateTransferResult_TransferExistsWithDifferentTimeout                      CreateTransferResult = 44
	CreateTransferResult_TransferExistsWithDifferentDebitAccountID               CreateTransferResult = 37
	CreateTransferResult_TransferExistsWithDifferentCreditAccountID              CreateTransferResult = 38
	CreateTransferResult_TransferExistsWithDifferentAmount                       CreateTransferResult = 39
	CreateTransferResult_TransferExistsWithDifferentUserData128                  CreateTransferResult = 41
	CreateTransferResult_TransferExistsWithDifferentUserData64                   CreateTransferResult = 42
	CreateTransferResult_TransferExistsWithDifferentUserData32                   CreateTransferResult = 43
	CreateTransferResult_TransferExistsWithDifferentLedger                       CreateTransferResult = 67
	CreateTransferResult_TransferExistsWithDifferentCode                         CreateTransferResult = 45
	CreateTransferResult_TransferExists                                          CreateTransferResult = 46
	CreateTransferResult_TransferIDAlreadyFailed                                 CreateTransferResult = 68
	CreateTransferResult_TransferFlagsAreMutuallyExclusive                       CreateTransferResult = 7
	CreateTransferResult_TransferDebitAccountIDMustNotBeZero                     CreateTransferResult = 8
	CreateTransferResult_TransferDebitAccountIDMustNotBeIntMax                   CreateTransferResult = 9
	CreateTransferResult_TransferCreditAccountIDMustNotBeZero                    CreateTransferResult = 10
	CreateTransferResult_TransferCreditAccountIDMustNotBeIntMax                  CreateTransferResult = 11
	CreateTransferResult_TransferAccountsMustBeDifferent                         CreateTransferResult = 12
	CreateTransferResult_TransferPendingIDMustBeZero                             CreateTransferResult = 13
	CreateTransferResult_TransferPendingIDMustNotBeZero                          CreateTransferResult = 14
	CreateTransferResult_TransferPendingIDMustNotBeIntMax                        CreateTransferResult = 15
	CreateTransferResult_TransferPendingIDMustBeDifferent                        CreateTransferResult = 16
	CreateTransferResult_TransferTimeoutReservedForPendingTransfer               CreateTransferResult = 17
	CreateTransferResult_TransferClosingTransferMustBePending                    CreateTransferResult = 64
	CreateTransferResult_TransferAmountMustNotBeZero                             CreateTransferResult = 18
	CreateTransferResult_TransferLedgerMustNotBeZero                             CreateTransferResult = 19
	CreateTransferResult_TransferCodeMustNotBeZero                               CreateTransferResult = 20
	CreateTransferResult_TransferDebitAccountNotFound                            CreateTransferResult = 21
	CreateTransferResult_TransferCreditAccountNotFound                           CreateTransferResult = 22
	CreateTransferResult_TransferAccountsMustHaveTheSameLedger                   CreateTransferResult = 23
	CreateTransferResult_TransferTransferMustHaveTheSameLedgerAsAccounts         CreateTransferResult = 24
	CreateTransferResult_TransferPendingTransferNotFound                         CreateTransferResult = 25
	CreateTransferResult_TransferPendingTransferNotPending                       CreateTransferResult = 26
	CreateTransferResult_TransferPendingTransferHasDifferentDebitAccountID       CreateTransferResult = 27
	CreateTransferResult_TransferPendingTransferHasDifferentCreditAccountID      CreateTransferResult = 28
	CreateTransferResult_TransferPendingTransferHasDifferentLedger               CreateTransferResult = 29
	CreateTransferResult_TransferPendingTransferHasDifferentCode                 CreateTransferResult = 30
	CreateTransferResult_TransferExceedsPendingTransferAmount                    CreateTransferResult = 31
	CreateTransferResult_TransferPendingTransferHasDifferentAmount               CreateTransferResult = 32
	CreateTransferResult_TransferPendingTransferAlreadyPosted                    CreateTransferResult = 33
	CreateTransferResult_TransferPendingTransferAlreadyVoided                    CreateTransferResult = 34
	CreateTransferResult_TransferPendingTransferExpired                          CreateTransferResult = 35
	CreateTransferResult_TransferImportedEventTimestampMustNotRegress            CreateTransferResult = 60
	CreateTransferResult_TransferImportedEventTimestampMustPostdateDebitAccount  CreateTransferResult = 61
	CreateTransferResult_TransferImportedEventTimestampMustPostdateCreditAccount CreateTransferResult = 62
	CreateTransferResult_TransferImportedEventTimeoutMustBeZero                  CreateTransferResult = 63
	CreateTransferResult_TransferDebitAccountAlreadyClosed                       CreateTransferResult = 65
	CreateTransferResult_TransferCreditAccountAlreadyClosed                      CreateTransferResult = 66
	CreateTransferResult_TransferOverflowsDebitsPending                          CreateTransferResult = 47
	CreateTransferResult_TransferOverflowsCreditsPending                         CreateTransferResult = 48
	CreateTransferResult_TransferOverflowsDebitsPosted                           CreateTransferResult = 49
	CreateTransferResult_TransferOverflowsCreditsPosted                          CreateTransferResult = 50
	CreateTransferResult_TransferOverflowsDebits                                 CreateTransferResult = 51
	CreateTransferResult_TransferOverflowsCredits                                CreateTransferResult = 52
	CreateTransferResult_TransferOverflowsTimeout                                CreateTransferResult = 53
	CreateTransferResult_TransferExceedsCredits                                  CreateTransferResult = 54
	CreateTransferResult_TransferExceedsDebits                                   CreateTransferResult = 55
)

// Enum value maps for CreateTransferResult.
var (
	CreateTransferResult_name = map[int32]string{
		0:  "TransferOK",
		1:  "TransferLinkedEventFailed",
		2:  "TransferLinkedEventChainOpen",
		56: "TransferImportedEventExpected",
		57: "TransferImportedEventNotExpected",
		3:  "TransferTimestampMustBeZero",
		58: "TransferImportedEventTimestampOutOfRange",
		59: "TransferImportedEventTimestampMustNotAdvance",
		4:  "TransferReservedFlag",
		5:  "TransferIDMustNotBeZero",
		6:  "TransferIDMustNotBeIntMax",
		36: "TransferExistsWithDifferentFlags",
		40: "TransferExistsWithDifferentPendingID",
		44: "TransferExistsWithDifferentTimeout",
		37: "TransferExistsWithDifferentDebitAccountID",
		38: "TransferExistsWithDifferentCreditAccountID",
		39: "TransferExistsWithDifferentAmount",
		41: "TransferExistsWithDifferentUserData128",
		42: "TransferExistsWithDifferentUserData64",
		43: "TransferExistsWithDifferentUserData32",
		67: "TransferExistsWithDifferentLedger",
		45: "TransferExistsWithDifferentCode",
		46: "TransferExists",
		68: "TransferIDAlreadyFailed",
		7:  "TransferFlagsAreMutuallyExclusive",
		8:  "TransferDebitAccountIDMustNotBeZero",
		9:  "TransferDebitAccountIDMustNotBeIntMax",
		10: "TransferCreditAccountIDMustNotBeZero",
		11: "TransferCreditAccountIDMustNotBeIntMax",
		12: "TransferAccountsMustBeDifferent",
		13: "TransferPendingIDMustBeZero",
		14: "TransferPendingIDMustNotBeZero",
		15: "TransferPendingIDMustNotBeIntMax",
		16: "TransferPendingIDMustBeDifferent",
		17: "TransferTimeoutReservedForPendingTransfer",
		64: "TransferClosingTransferMustBePending",
		18: "TransferAmountMustNotBeZero",
		19: "TransferLedgerMustNotBeZero",
		20: "TransferCodeMustNotBeZero",
		21: "TransferDebitAccountNotFound",
		22: "TransferCreditAccountNotFound",
		23: "TransferAccountsMustHaveTheSameLedger",
		24: "TransferTransferMustHaveTheSameLedgerAsAccounts",
		25: "TransferPendingTransferNotFound",
		26: "TransferPendingTransferNotPending",
		27: "TransferPendingTransferHasDifferentDebitAccountID",
		28: "TransferPendingTransferHasDifferentCreditAccountID",
		29: "TransferPendingTransferHasDifferentLedger",
		30: "TransferPendingTransferHasDifferentCode",
		31: "TransferExceedsPendingTransferAmount",
		32: "TransferPendingTransferHasDifferentAmount",
		33: "TransferPendingTransferAlreadyPosted",
		34: "TransferPendingTransferAlreadyVoided",
		35: "TransferPendingTransferExpired",
		60: "TransferImportedEventTimestampMustNotRegress",
		61: "TransferImportedEventTimestampMustPostdateDebitAccount",
		62: "TransferImportedEventTimestampMustPostdateCreditAccount",
		63: "TransferImportedEventTimeoutMustBeZero",
		65: "TransferDebitAccountAlreadyClosed",
		66: "TransferCreditAccountAlreadyClosed",
		47: "TransferOverflowsDebitsPending",
		48: "TransferOverflowsCreditsPending",
		49: "TransferOverflowsDebitsPosted",
		50: "TransferOverflowsCreditsPosted",
		51: "TransferOverflowsDebits",
		52: "TransferOverflowsCredits",
		53: "TransferOverflowsTimeout",
		54: "TransferExceedsCredits",
		55: "TransferExceedsDebits",
	}
	CreateTransferResult_value = map[string]int32{
		"TransferOK":                                              0,
		"TransferLinkedEventFailed":                               1,
		"TransferLinkedEventChainOpen":                            2,
		"TransferImportedEventExpected":                           56,
		"TransferImportedEventNotExpected":                        57,
		"TransferTimestampMustBeZero":                             3,
		"TransferImportedEventTimestampOutOfRange":                58,
		"TransferImportedEventTimestampMustNotAdvance":            59,
		"TransferReservedFlag":                                    4,
		"TransferIDMustNotBeZero":                                 5,
		"TransferIDMustNotBeIntMax":                               6,
		"TransferExistsWithDifferentFlags":                        36,
		"TransferExistsWithDifferentPendingID":                    40,
		"TransferExistsWithDifferentTimeout":                      44,
		"TransferExistsWithDifferentDebitAccountID":               37,
		"TransferExistsWithDifferentCreditAccountID":              38,
		"TransferExistsWithDifferentAmount":                       39,
		"TransferExistsWithDifferentUserData128":                  41,
		"TransferExistsWithDifferentUserData64":                   42,
		"TransferExistsWithDifferentUserData32":                   43,
		"TransferExistsWithDifferentLedger":                       67,
		"TransferExistsWithDifferentCode":                         45,
		"TransferExists":                                          46,
		"TransferIDAlreadyFailed":                                 68,
		"TransferFlagsAreMutuallyExclusive":                       7,
		"TransferDebitAccountIDMustNotBeZero":                     8,
		"TransferDebitAccountIDMustNotBeIntMax":                   9,
		"TransferCreditAccountIDMustNotBeZero":                    10,
		"TransferCreditAccountIDMustNotBeIntMax":                  11,
		"TransferAccountsMustBeDifferent":                         12,
		"TransferPendingIDMustBeZero":                             13,
		"TransferPendingIDMustNotBeZero":                          14,
		"TransferPendingIDMustNotBeIntMax":                        15,
		"TransferPendingIDMustBeDifferent":                        16,
		"TransferTimeoutReservedForPendingTransfer":               17,
		"TransferClosingTransferMustBePending":                    64,
		"TransferAmountMustNotBeZero":                             18,
		"TransferLedgerMustNotBeZero":                             19,
		"TransferCodeMustNotBeZero":                               20,
		"TransferDebitAccountNotFound":                            21,
		"TransferCreditAccountNotFound":                           22,
		"TransferAccountsMustHaveTheSameLedger":                   23,
		"TransferTransferMustHaveTheSameLedgerAsAccounts":         24,
		"TransferPendingTransferNotFound":                         25,
		"TransferPendingTransferNotPending":                       26,
		"TransferPendingTransferHasDifferentDebitAccountID":       27,
		"TransferPendingTransferHasDifferentCreditAccountID":      28,
		"TransferPendingTransferHasDifferentLedger":               29,
		"TransferPendingTransferHasDifferentCode":                 30,
		"TransferExceedsPendingTransferAmount":                    31,
		"TransferPendingTransferHasDifferentAmount":               32,
		"TransferPendingTransferAlreadyPosted":                    33,
		"TransferPendingTransferAlreadyVoided":                    34,
		"TransferPendingTransferExpired":                          35,
		"TransferImportedEventTimestampMustNotRegress":            60,
		"TransferImportedEventTimestampMustPostdateDebitAccount":  61,
		"TransferImportedEventTimestampMustPostdateCreditAccount": 62,
		"TransferImportedEventTimeoutMustBeZero":                  63,
		"TransferDebitAccountAlreadyClosed":                       65,
		"TransferCreditAccountAlreadyClosed":                      66,
		"TransferOverflowsDebitsPending":                          47,
		"TransferOverflowsCreditsPending":                         48,
		"TransferOverflowsDebitsPosted":                           49,
		"TransferOverflowsCreditsPosted":                          50,
		"TransferOverflowsDebits":                                 51,
		"TransferOverflowsCredits":                                52,
		"TransferOverflowsTimeout":                                53,
		"TransferExceedsCredits":                                  54,
		"TransferExceedsDebits":                                   55,
	}
)

func (x CreateTransferResult) Enum() *CreateTransferResult {
	p := new(CreateTransferResult)
	*p = x
	return p
}

func (x CreateTransferResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateTransferResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tigerbeetle_proto_enumTypes[1].Descriptor()
}

func (CreateTransferResult) Type() protoreflect.EnumType {
	return &file_proto_tigerbeetle_proto_enumTypes[1]
}

func (x CreateTransferResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateTransferResult.Descriptor instead.
func (CreateTransferResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{1}
}

type GetIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIDRequest) Reset() {
	*x = GetIDRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIDRequest) ProtoMessage() {}

func (x *GetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIDRequest.ProtoReflect.Descriptor instead.
func (*GetIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{0}
}

type GetIDReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIDReply) Reset() {
	*x = GetIDReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIDReply) ProtoMessage() {}

func (x *GetIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIDReply.ProtoReflect.Descriptor instead.
func (*GetIDReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{1}
}

func (x *GetIDReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateAccountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []*Account             `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccountsRequest) Reset() {
	*x = CreateAccountsRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountsRequest) ProtoMessage() {}

func (x *CreateAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountsRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{2}
}

func (x *CreateAccountsRequest) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type CreateAccountsReply struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Results       []*CreateAccountsReplyItem `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccountsReply) Reset() {
	*x = CreateAccountsReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountsReply) ProtoMessage() {}

func (x *CreateAccountsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountsReply.ProtoReflect.Descriptor instead.
func (*CreateAccountsReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAccountsReply) GetResults() []*CreateAccountsReplyItem {
	if x != nil {
		return x.Results
	}
	return nil
}

type CreateAccountsReplyItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Result        CreateAccountResult    `protobuf:"varint,2,opt,name=result,proto3,enum=proto.CreateAccountResult" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccountsReplyItem) Reset() {
	*x = CreateAccountsReplyItem{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountsReplyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountsReplyItem) ProtoMessage() {}

func (x *CreateAccountsReplyItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountsReplyItem.ProtoReflect.Descriptor instead.
func (*CreateAccountsReplyItem) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAccountsReplyItem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CreateAccountsReplyItem) GetResult() CreateAccountResult {
	if x != nil {
		return x.Result
	}
	return CreateAccountResult_AccountOK
}

type CreateTransfersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transfers     []*Transfer            `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTransfersRequest) Reset() {
	*x = CreateTransfersRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransfersRequest) ProtoMessage() {}

func (x *CreateTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransfersRequest.ProtoReflect.Descriptor instead.
func (*CreateTransfersRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTransfersRequest) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type CreateTransfersReply struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Results       []*CreateTransfersReplyItem `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTransfersReply) Reset() {
	*x = CreateTransfersReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransfersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransfersReply) ProtoMessage() {}

func (x *CreateTransfersReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransfersReply.ProtoReflect.Descriptor instead.
func (*CreateTransfersReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTransfersReply) GetResults() []*CreateTransfersReplyItem {
	if x != nil {
		return x.Results
	}
	return nil
}

type CreateTransfersReplyItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Result        CreateTransferResult   `protobuf:"varint,2,opt,name=result,proto3,enum=proto.CreateTransferResult" json:"result,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTransfersReplyItem) Reset() {
	*x = CreateTransfersReplyItem{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransfersReplyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransfersReplyItem) ProtoMessage() {}

func (x *CreateTransfersReplyItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransfersReplyItem.ProtoReflect.Descriptor instead.
func (*CreateTransfersReplyItem) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTransfersReplyItem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CreateTransfersReplyItem) GetResult() CreateTransferResult {
	if x != nil {
		return x.Result
	}
	return CreateTransferResult_TransferOK
}

func (x *CreateTransfersReplyItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LookupAccountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountIds    []string               `protobuf:"bytes,1,rep,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupAccountsRequest) Reset() {
	*x = LookupAccountsRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupAccountsRequest) ProtoMessage() {}

func (x *LookupAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupAccountsRequest.ProtoReflect.Descriptor instead.
func (*LookupAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{8}
}

func (x *LookupAccountsRequest) GetAccountIds() []string {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type LookupAccountsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []*Account             `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupAccountsReply) Reset() {
	*x = LookupAccountsReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupAccountsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupAccountsReply) ProtoMessage() {}

func (x *LookupAccountsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupAccountsReply.ProtoReflect.Descriptor instead.
func (*LookupAccountsReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{9}
}

func (x *LookupAccountsReply) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type LookupTransfersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransferIds   []string               `protobuf:"bytes,1,rep,name=transfer_ids,json=transferIds,proto3" json:"transfer_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupTransfersRequest) Reset() {
	*x = LookupTransfersRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupTransfersRequest) ProtoMessage() {}

func (x *LookupTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupTransfersRequest.ProtoReflect.Descriptor instead.
func (*LookupTransfersRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{10}
}

func (x *LookupTransfersRequest) GetTransferIds() []string {
	if x != nil {
		return x.TransferIds
	}
	return nil
}

type LookupTransfersReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transfers     []*Transfer            `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupTransfersReply) Reset() {
	*x = LookupTransfersReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupTransfersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupTransfersReply) ProtoMessage() {}

func (x *LookupTransfersReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupTransfersReply.ProtoReflect.Descriptor instead.
func (*LookupTransfersReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{11}
}

func (x *LookupTransfersReply) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type GetAccountTransfersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *AccountFilter         `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountTransfersRequest) Reset() {
	*x = GetAccountTransfersRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountTransfersRequest) ProtoMessage() {}

func (x *GetAccountTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountTransfersRequest.ProtoReflect.Descriptor instead.
func (*GetAccountTransfersRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{12}
}

func (x *GetAccountTransfersRequest) GetFilter() *AccountFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetAccountTransfersReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transfers     []*Transfer            `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountTransfersReply) Reset() {
	*x = GetAccountTransfersReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountTransfersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountTransfersReply) ProtoMessage() {}

func (x *GetAccountTransfersReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountTransfersReply.ProtoReflect.Descriptor instead.
func (*GetAccountTransfersReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{13}
}

func (x *GetAccountTransfersReply) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type GetAccountBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *AccountFilter         `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountBalancesRequest) Reset() {
	*x = GetAccountBalancesRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountBalancesRequest) ProtoMessage() {}

func (x *GetAccountBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetAccountBalancesRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{14}
}

func (x *GetAccountBalancesRequest) GetFilter() *AccountFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetAccountBalancesReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountBalances []*AccountBalance      `protobuf:"bytes,1,rep,name=account_balances,json=accountBalances,proto3" json:"account_balances,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetAccountBalancesReply) Reset() {
	*x = GetAccountBalancesReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountBalancesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountBalancesReply) ProtoMessage() {}

func (x *GetAccountBalancesReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountBalancesReply.ProtoReflect.Descriptor instead.
func (*GetAccountBalancesReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{15}
}

func (x *GetAccountBalancesReply) GetAccountBalances() []*AccountBalance {
	if x != nil {
		return x.AccountBalances
	}
	return nil
}

type QueryTransfersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *QueryFilter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTransfersRequest) Reset() {
	*x = QueryTransfersRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTransfersRequest) ProtoMessage() {}

func (x *QueryTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTransfersRequest.ProtoReflect.Descriptor instead.
func (*QueryTransfersRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{16}
}

func (x *QueryTransfersRequest) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type QueryTransfersReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transfers     []*Transfer            `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTransfersReply) Reset() {
	*x = QueryTransfersReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTransfersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTransfersReply) ProtoMessage() {}

func (x *QueryTransfersReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTransfersReply.ProtoReflect.Descriptor instead.
func (*QueryTransfersReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{17}
}

func (x *QueryTransfersReply) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type QueryAccountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *QueryFilter           `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAccountsRequest) Reset() {
	*x = QueryAccountsRequest{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountsRequest) ProtoMessage() {}

func (x *QueryAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAccountsRequest.ProtoReflect.Descriptor instead.
func (*QueryAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{18}
}

func (x *QueryAccountsRequest) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type QueryAccountsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []*Account             `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAccountsReply) Reset() {
	*x = QueryAccountsReply{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAccountsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountsReply) ProtoMessage() {}

func (x *QueryAccountsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAccountsReply.ProtoReflect.Descriptor instead.
func (*QueryAccountsReply) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{19}
}

func (x *QueryAccountsReply) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

// Types
// ----------------------------------------------------------------
type Account struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DebitsPending  uint64                 `protobuf:"varint,2,opt,name=debits_pending,json=debitsPending,proto3" json:"debits_pending,omitempty"`
	DebitsPosted   uint64                 `protobuf:"varint,3,opt,name=debits_posted,json=debitsPosted,proto3" json:"debits_posted,omitempty"`
	CreditsPending uint64                 `protobuf:"varint,4,opt,name=credits_pending,json=creditsPending,proto3" json:"credits_pending,omitempty"`
	CreditsPosted  uint64                 `protobuf:"varint,5,opt,name=credits_posted,json=creditsPosted,proto3" json:"credits_posted,omitempty"`
	UserData128    string                 `protobuf:"bytes,6,opt,name=user_data128,json=userData128,proto3" json:"user_data128,omitempty"`
	UserData64     uint64                 `protobuf:"varint,7,opt,name=user_data64,json=userData64,proto3" json:"user_data64,omitempty"`
	UserData32     uint32                 `protobuf:"varint,8,opt,name=user_data32,json=userData32,proto3" json:"user_data32,omitempty"`
	Ledger         uint32                 `protobuf:"varint,9,opt,name=ledger,proto3" json:"ledger,omitempty"`
	Code           uint32                 `protobuf:"varint,10,opt,name=code,proto3" json:"code,omitempty"`
	Flags          *AccountFlags          `protobuf:"bytes,11,opt,name=flags,proto3" json:"flags,omitempty"`
	Timestamp      uint64                 `protobuf:"varint,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{20}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetDebitsPending() uint64 {
	if x != nil {
		return x.DebitsPending
	}
	return 0
}

func (x *Account) GetDebitsPosted() uint64 {
	if x != nil {
		return x.DebitsPosted
	}
	return 0
}

func (x *Account) GetCreditsPending() uint64 {
	if x != nil {
		return x.CreditsPending
	}
	return 0
}

func (x *Account) GetCreditsPosted() uint64 {
	if x != nil {
		return x.CreditsPosted
	}
	return 0
}

func (x *Account) GetUserData128() string {
	if x != nil {
		return x.UserData128
	}
	return ""
}

func (x *Account) GetUserData64() uint64 {
	if x != nil {
		return x.UserData64
	}
	return 0
}

func (x *Account) GetUserData32() uint32 {
	if x != nil {
		return x.UserData32
	}
	return 0
}

func (x *Account) GetLedger() uint32 {
	if x != nil {
		return x.Ledger
	}
	return 0
}

func (x *Account) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Account) GetFlags() *AccountFlags {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Account) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AccountFlags struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Linked                     *bool                  `protobuf:"varint,1,opt,name=linked,proto3,oneof" json:"linked,omitempty"`
	DebitsMustNotExceedCredits *bool                  `protobuf:"varint,2,opt,name=debits_must_not_exceed_credits,json=debitsMustNotExceedCredits,proto3,oneof" json:"debits_must_not_exceed_credits,omitempty"`
	CreditsMustNotExceedDebits *bool                  `protobuf:"varint,3,opt,name=credits_must_not_exceed_debits,json=creditsMustNotExceedDebits,proto3,oneof" json:"credits_must_not_exceed_debits,omitempty"`
	History                    *bool                  `protobuf:"varint,4,opt,name=history,proto3,oneof" json:"history,omitempty"`
	Closed                     *bool                  `protobuf:"varint,5,opt,name=closed,proto3,oneof" json:"closed,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *AccountFlags) Reset() {
	*x = AccountFlags{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFlags) ProtoMessage() {}

func (x *AccountFlags) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFlags.ProtoReflect.Descriptor instead.
func (*AccountFlags) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{21}
}

func (x *AccountFlags) GetLinked() bool {
	if x != nil && x.Linked != nil {
		return *x.Linked
	}
	return false
}

func (x *AccountFlags) GetDebitsMustNotExceedCredits() bool {
	if x != nil && x.DebitsMustNotExceedCredits != nil {
		return *x.DebitsMustNotExceedCredits
	}
	return false
}

func (x *AccountFlags) GetCreditsMustNotExceedDebits() bool {
	if x != nil && x.CreditsMustNotExceedDebits != nil {
		return *x.CreditsMustNotExceedDebits
	}
	return false
}

func (x *AccountFlags) GetHistory() bool {
	if x != nil && x.History != nil {
		return *x.History
	}
	return false
}

func (x *AccountFlags) GetClosed() bool {
	if x != nil && x.Closed != nil {
		return *x.Closed
	}
	return false
}

type Transfer struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DebitAccountId  string                 `protobuf:"bytes,2,opt,name=debit_account_id,json=debitAccountId,proto3" json:"debit_account_id,omitempty"`
	CreditAccountId string                 `protobuf:"bytes,3,opt,name=credit_account_id,json=creditAccountId,proto3" json:"credit_account_id,omitempty"`
	Amount          int64                  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	PendingId       *string                `protobuf:"bytes,5,opt,name=pending_id,json=pendingId,proto3,oneof" json:"pending_id,omitempty"`
	UserData128     string                 `protobuf:"bytes,6,opt,name=user_data128,json=userData128,proto3" json:"user_data128,omitempty"`
	UserData64      uint64                 `protobuf:"varint,7,opt,name=user_data64,json=userData64,proto3" json:"user_data64,omitempty"`
	UserData32      uint32                 `protobuf:"varint,8,opt,name=user_data32,json=userData32,proto3" json:"user_data32,omitempty"`
	Ledger          uint32                 `protobuf:"varint,9,opt,name=ledger,proto3" json:"ledger,omitempty"`
	Code            uint32                 `protobuf:"varint,10,opt,name=code,proto3" json:"code,omitempty"`
	TransferFlags   *TransferFlags         `protobuf:"bytes,11,opt,name=transfer_flags,json=transferFlags,proto3" json:"transfer_flags,omitempty"`
	Timestamp       *uint64                `protobuf:"varint,13,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{22}
}

func (x *Transfer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transfer) GetDebitAccountId() string {
	if x != nil {
		return x.DebitAccountId
	}
	return ""
}

func (x *Transfer) GetCreditAccountId() string {
	if x != nil {
		return x.CreditAccountId
	}
	return ""
}

func (x *Transfer) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transfer) GetPendingId() string {
	if x != nil && x.PendingId != nil {
		return *x.PendingId
	}
	return ""
}

func (x *Transfer) GetUserData128() string {
	if x != nil {
		return x.UserData128
	}
	return ""
}

func (x *Transfer) GetUserData64() uint64 {
	if x != nil {
		return x.UserData64
	}
	return 0
}

func (x *Transfer) GetUserData32() uint32 {
	if x != nil {
		return x.UserData32
	}
	return 0
}

func (x *Transfer) GetLedger() uint32 {
	if x != nil {
		return x.Ledger
	}
	return 0
}

func (x *Transfer) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Transfer) GetTransferFlags() *TransferFlags {
	if x != nil {
		return x.TransferFlags
	}
	return nil
}

func (x *Transfer) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type TransferFlags struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Linked              *bool                  `protobuf:"varint,1,opt,name=linked,proto3,oneof" json:"linked,omitempty"`
	Pending             *bool                  `protobuf:"varint,2,opt,name=pending,proto3,oneof" json:"pending,omitempty"`
	PostPendingTransfer *bool                  `protobuf:"varint,3,opt,name=post_pending_transfer,json=postPendingTransfer,proto3,oneof" json:"post_pending_transfer,omitempty"`
	VoidPendingTransfer *bool                  `protobuf:"varint,4,opt,name=void_pending_transfer,json=voidPendingTransfer,proto3,oneof" json:"void_pending_transfer,omitempty"`
	BalancingDebit      *bool                  `protobuf:"varint,5,opt,name=balancing_debit,json=balancingDebit,proto3,oneof" json:"balancing_debit,omitempty"`
	BalancingCredit     *bool                  `protobuf:"varint,6,opt,name=balancing_credit,json=balancingCredit,proto3,oneof" json:"balancing_credit,omitempty"`
	ClosingDebit        *bool                  `protobuf:"varint,7,opt,name=closing_debit,json=closingDebit,proto3,oneof" json:"closing_debit,omitempty"`
	ClosingCredit       *bool                  `protobuf:"varint,8,opt,name=closing_credit,json=closingCredit,proto3,oneof" json:"closing_credit,omitempty"`
	Imported            *bool                  `protobuf:"varint,9,opt,name=imported,proto3,oneof" json:"imported,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TransferFlags) Reset() {
	*x = TransferFlags{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFlags) ProtoMessage() {}

func (x *TransferFlags) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFlags.ProtoReflect.Descriptor instead.
func (*TransferFlags) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{23}
}

func (x *TransferFlags) GetLinked() bool {
	if x != nil && x.Linked != nil {
		return *x.Linked
	}
	return false
}

func (x *TransferFlags) GetPending() bool {
	if x != nil && x.Pending != nil {
		return *x.Pending
	}
	return false
}

func (x *TransferFlags) GetPostPendingTransfer() bool {
	if x != nil && x.PostPendingTransfer != nil {
		return *x.PostPendingTransfer
	}
	return false
}

func (x *TransferFlags) GetVoidPendingTransfer() bool {
	if x != nil && x.VoidPendingTransfer != nil {
		return *x.VoidPendingTransfer
	}
	return false
}

func (x *TransferFlags) GetBalancingDebit() bool {
	if x != nil && x.BalancingDebit != nil {
		return *x.BalancingDebit
	}
	return false
}

func (x *TransferFlags) GetBalancingCredit() bool {
	if x != nil && x.BalancingCredit != nil {
		return *x.BalancingCredit
	}
	return false
}

func (x *TransferFlags) GetClosingDebit() bool {
	if x != nil && x.ClosingDebit != nil {
		return *x.ClosingDebit
	}
	return false
}

func (x *TransferFlags) GetClosingCredit() bool {
	if x != nil && x.ClosingCredit != nil {
		return *x.ClosingCredit
	}
	return false
}

func (x *TransferFlags) GetImported() bool {
	if x != nil && x.Imported != nil {
		return *x.Imported
	}
	return false
}

type AccountFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	TimestampMin  *uint64                `protobuf:"varint,2,opt,name=timestamp_min,json=timestampMin,proto3,oneof" json:"timestamp_min,omitempty"`
	TimestampMax  *uint64                `protobuf:"varint,3,opt,name=timestamp_max,json=timestampMax,proto3,oneof" json:"timestamp_max,omitempty"`
	Limit         uint32                 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Flags         *AccountFilterFlags    `protobuf:"bytes,5,opt,name=flags,proto3,oneof" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountFilter) Reset() {
	*x = AccountFilter{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFilter) ProtoMessage() {}

func (x *AccountFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFilter.ProtoReflect.Descriptor instead.
func (*AccountFilter) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{24}
}

func (x *AccountFilter) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AccountFilter) GetTimestampMin() uint64 {
	if x != nil && x.TimestampMin != nil {
		return *x.TimestampMin
	}
	return 0
}

func (x *AccountFilter) GetTimestampMax() uint64 {
	if x != nil && x.TimestampMax != nil {
		return *x.TimestampMax
	}
	return 0
}

func (x *AccountFilter) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AccountFilter) GetFlags() *AccountFilterFlags {
	if x != nil {
		return x.Flags
	}
	return nil
}

type AccountFilterFlags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Debits        *bool                  `protobuf:"varint,1,opt,name=debits,proto3,oneof" json:"debits,omitempty"`
	Credits       *bool                  `protobuf:"varint,2,opt,name=credits,proto3,oneof" json:"credits,omitempty"`
	Reversed      *bool                  `protobuf:"varint,3,opt,name=reversed,proto3,oneof" json:"reversed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountFilterFlags) Reset() {
	*x = AccountFilterFlags{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountFilterFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountFilterFlags) ProtoMessage() {}

func (x *AccountFilterFlags) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountFilterFlags.ProtoReflect.Descriptor instead.
func (*AccountFilterFlags) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{25}
}

func (x *AccountFilterFlags) GetDebits() bool {
	if x != nil && x.Debits != nil {
		return *x.Debits
	}
	return false
}

func (x *AccountFilterFlags) GetCredits() bool {
	if x != nil && x.Credits != nil {
		return *x.Credits
	}
	return false
}

func (x *AccountFilterFlags) GetReversed() bool {
	if x != nil && x.Reversed != nil {
		return *x.Reversed
	}
	return false
}

type AccountBalance struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DebitsPending  uint64                 `protobuf:"varint,1,opt,name=debits_pending,json=debitsPending,proto3" json:"debits_pending,omitempty"`
	DebitsPosted   uint64                 `protobuf:"varint,2,opt,name=debits_posted,json=debitsPosted,proto3" json:"debits_posted,omitempty"`
	CreditsPending uint64                 `protobuf:"varint,3,opt,name=credits_pending,json=creditsPending,proto3" json:"credits_pending,omitempty"`
	CreditsPosted  uint64                 `protobuf:"varint,4,opt,name=credits_posted,json=creditsPosted,proto3" json:"credits_posted,omitempty"`
	Timestamp      uint64                 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccountBalance) Reset() {
	*x = AccountBalance{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalance) ProtoMessage() {}

func (x *AccountBalance) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalance.ProtoReflect.Descriptor instead.
func (*AccountBalance) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{26}
}

func (x *AccountBalance) GetDebitsPending() uint64 {
	if x != nil {
		return x.DebitsPending
	}
	return 0
}

func (x *AccountBalance) GetDebitsPosted() uint64 {
	if x != nil {
		return x.DebitsPosted
	}
	return 0
}

func (x *AccountBalance) GetCreditsPending() uint64 {
	if x != nil {
		return x.CreditsPending
	}
	return 0
}

func (x *AccountBalance) GetCreditsPosted() uint64 {
	if x != nil {
		return x.CreditsPosted
	}
	return 0
}

func (x *AccountBalance) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type QueryFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserData128   *string                `protobuf:"bytes,1,opt,name=user_data128,json=userData128,proto3,oneof" json:"user_data128,omitempty"`
	UserData64    *uint64                `protobuf:"varint,2,opt,name=user_data64,json=userData64,proto3,oneof" json:"user_data64,omitempty"`
	UserData32    *uint32                `protobuf:"varint,3,opt,name=user_data32,json=userData32,proto3,oneof" json:"user_data32,omitempty"`
	Code          *uint32                `protobuf:"varint,4,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Ledger        *uint32                `protobuf:"varint,5,opt,name=ledger,proto3,oneof" json:"ledger,omitempty"`
	TimestampMin  *uint64                `protobuf:"varint,6,opt,name=timestamp_min,json=timestampMin,proto3,oneof" json:"timestamp_min,omitempty"`
	TimestampMax  *uint64                `protobuf:"varint,7,opt,name=timestamp_max,json=timestampMax,proto3,oneof" json:"timestamp_max,omitempty"`
	Limit         uint32                 `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Flags         *QueryFilterFlags      `protobuf:"bytes,9,opt,name=flags,proto3,oneof" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFilter) Reset() {
	*x = QueryFilter{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFilter) ProtoMessage() {}

func (x *QueryFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFilter.ProtoReflect.Descriptor instead.
func (*QueryFilter) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{27}
}

func (x *QueryFilter) GetUserData128() string {
	if x != nil && x.UserData128 != nil {
		return *x.UserData128
	}
	return ""
}

func (x *QueryFilter) GetUserData64() uint64 {
	if x != nil && x.UserData64 != nil {
		return *x.UserData64
	}
	return 0
}

func (x *QueryFilter) GetUserData32() uint32 {
	if x != nil && x.UserData32 != nil {
		return *x.UserData32
	}
	return 0
}

func (x *QueryFilter) GetCode() uint32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *QueryFilter) GetLedger() uint32 {
	if x != nil && x.Ledger != nil {
		return *x.Ledger
	}
	return 0
}

func (x *QueryFilter) GetTimestampMin() uint64 {
	if x != nil && x.TimestampMin != nil {
		return *x.TimestampMin
	}
	return 0
}

func (x *QueryFilter) GetTimestampMax() uint64 {
	if x != nil && x.TimestampMax != nil {
		return *x.TimestampMax
	}
	return 0
}

func (x *QueryFilter) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryFilter) GetFlags() *QueryFilterFlags {
	if x != nil {
		return x.Flags
	}
	return nil
}

type QueryFilterFlags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reversed      *bool                  `protobuf:"varint,1,opt,name=reversed,proto3,oneof" json:"reversed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryFilterFlags) Reset() {
	*x = QueryFilterFlags{}
	mi := &file_proto_tigerbeetle_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFilterFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFilterFlags) ProtoMessage() {}

func (x *QueryFilterFlags) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tigerbeetle_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFilterFlags.ProtoReflect.Descriptor instead.
func (*QueryFilterFlags) Descriptor() ([]byte, []int) {
	return file_proto_tigerbeetle_proto_rawDescGZIP(), []int{28}
}

func (x *QueryFilterFlags) GetReversed() bool {
	if x != nil && x.Reversed != nil {
		return *x.Reversed
	}
	return false
}

var File_proto_tigerbeetle_proto protoreflect.FileDescriptor

const file_proto_tigerbeetle_proto_rawDesc = "" +
	"\n" +
	"\x17proto/tigerbeetle.proto\x12\x05proto\"\x0e\n" +
	"\fGetIDRequest\"\x1c\n" +
	"\n" +
	"GetIDReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"C\n" +
	"\x15CreateAccountsRequest\x12*\n" +
	"\baccounts\x18\x01 \x03(\v2\x0e.proto.AccountR\baccounts\"O\n" +
	"\x13CreateAccountsReply\x128\n" +
	"\aresults\x18\x01 \x03(\v2\x1e.proto.CreateAccountsReplyItemR\aresults\"c\n" +
	"\x17CreateAccountsReplyItem\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x122\n" +
	"\x06result\x18\x02 \x01(\x0e2\x1a.proto.CreateAccountResultR\x06result\"G\n" +
	"\x16CreateTransfersRequest\x12-\n" +
	"\ttransfers\x18\x01 \x03(\v2\x0f.proto.TransferR\ttransfers\"Q\n" +
	"\x14CreateTransfersReply\x129\n" +
	"\aresults\x18\x01 \x03(\v2\x1f.proto.CreateTransfersReplyItemR\aresults\"u\n" +
	"\x18CreateTransfersReplyItem\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x123\n" +
	"\x06result\x18\x02 \x01(\x0e2\x1b.proto.CreateTransferResultR\x06result\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\"8\n" +
	"\x15LookupAccountsRequest\x12\x1f\n" +
	"\vaccount_ids\x18\x01 \x03(\tR\n" +
	"accountIds\"A\n" +
	"\x13LookupAccountsReply\x12*\n" +
	"\baccounts\x18\x01 \x03(\v2\x0e.proto.AccountR\baccounts\";\n" +
	"\x16LookupTransfersRequest\x12!\n" +
	"\ftransfer_ids\x18\x01 \x03(\tR\vtransferIds\"E\n" +
	"\x14LookupTransfersReply\x12-\n" +
	"\ttransfers\x18\x01 \x03(\v2\x0f.proto.TransferR\ttransfers\"J\n" +
	"\x1aGetAccountTransfersRequest\x12,\n" +
	"\x06filter\x18\x01 \x01(\v2\x14.proto.AccountFilterR\x06filter\"I\n" +
	"\x18GetAccountTransfersReply\x12-\n" +
	"\ttransfers\x18\x01 \x03(\v2\x0f.proto.TransferR\ttransfers\"I\n" +
	"\x19GetAccountBalancesRequest\x12,\n" +
	"\x06filter\x18\x01 \x01(\v2\x14.proto.AccountFilterR\x06filter\"[\n" +
	"\x17GetAccountBalancesReply\x12@\n" +
	"\x10account_balances\x18\x01 \x03(\v2\x15.proto.AccountBalanceR\x0faccountBalances\"C\n" +
	"\x15QueryTransfersRequest\x12*\n" +
	"\x06filter\x18\x01 \x01(\v2\x12.proto.QueryFilterR\x06filter\"D\n" +
	"\x13QueryTransfersReply\x12-\n" +
	"\ttransfers\x18\x01 \x03(\v2\x0f.proto.TransferR\ttransfers\"B\n" +
	"\x14QueryAccountsRequest\x12*\n" +
	"\x06filter\x18\x01 \x01(\v2\x12.proto.QueryFilterR\x06filter\"@\n" +
	"\x12QueryAccountsReply\x12*\n" +
	"\baccounts\x18\x01 \x03(\v2\x0e.proto.AccountR\baccounts\"\x8f\x03\n" +
	"\aAccount\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0edebits_pending\x18\x02 \x01(\x04R\rdebitsPending\x12#\n" +
	"\rdebits_posted\x18\x03 \x01(\x04R\fdebitsPosted\x12'\n" +
	"\x0fcredits_pending\x18\x04 \x01(\x04R\x0ecreditsPending\x12%\n" +
	"\x0ecredits_posted\x18\x05 \x01(\x04R\rcreditsPosted\x12!\n" +
	"\fuser_data128\x18\x06 \x01(\tR\vuserData128\x12\x1f\n" +
	"\vuser_data64\x18\a \x01(\x04R\n" +
	"userData64\x12\x1f\n" +
	"\vuser_data32\x18\b \x01(\rR\n" +
	"userData32\x12\x16\n" +
	"\x06ledger\x18\t \x01(\rR\x06ledger\x12\x12\n" +
	"\x04code\x18\n" +
	" \x01(\rR\x04code\x12)\n" +
	"\x05flags\x18\v \x01(\v2\x13.proto.AccountFlagsR\x05flags\x12\x1c\n" +
	"\ttimestamp\x18\f \x01(\x04R\ttimestamp\"\xe1\x02\n" +
	"\fAccountFlags\x12\x1b\n" +
	"\x06linked\x18\x01 \x01(\bH\x00R\x06linked\x88\x01\x01\x12G\n" +
	"\x1edebits_must_not_exceed_credits\x18\x02 \x01(\bH\x01R\x1adebitsMustNotExceedCredits\x88\x01\x01\x12G\n" +
	"\x1ecredits_must_not_exceed_debits\x18\x03 \x01(\bH\x02R\x1acreditsMustNotExceedDebits\x88\x01\x01\x12\x1d\n" +
	"\ahistory\x18\x04 \x01(\bH\x03R\ahistory\x88\x01\x01\x12\x1b\n" +
	"\x06closed\x18\x05 \x01(\bH\x04R\x06closed\x88\x01\x01B\t\n" +
	"\a_linkedB!\n" +
	"\x1f_debits_must_not_exceed_creditsB!\n" +
	"\x1f_credits_must_not_exceed_debitsB\n" +
	"\n" +
	"\b_historyB\t\n" +
	"\a_closed\"\xba\x03\n" +
	"\bTransfer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12(\n" +
	"\x10debit_account_id\x18\x02 \x01(\tR\x0edebitAccountId\x12*\n" +
	"\x11credit_account_id\x18\x03 \x01(\tR\x0fcreditAccountId\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x03R\x06amount\x12\"\n" +
	"\n" +
	"pending_id\x18\x05 \x01(\tH\x00R\tpendingId\x88\x01\x01\x12!\n" +
	"\fuser_data128\x18\x06 \x01(\tR\vuserData128\x12\x1f\n" +
	"\vuser_data64\x18\a \x01(\x04R\n" +
	"userData64\x12\x1f\n" +
	"\vuser_data32\x18\b \x01(\rR\n" +
	"userData32\x12\x16\n" +
	"\x06ledger\x18\t \x01(\rR\x06ledger\x12\x12\n" +
	"\x04code\x18\n" +
	" \x01(\rR\x04code\x12;\n" +
	"\x0etransfer_flags\x18\v \x01(\v2\x14.proto.TransferFlagsR\rtransferFlags\x12!\n" +
	"\ttimestamp\x18\r \x01(\x04H\x01R\ttimestamp\x88\x01\x01B\r\n" +
	"\v_pending_idB\f\n" +
	"\n" +
	"_timestamp\"\xb8\x04\n" +
	"\rTransferFlags\x12\x1b\n" +
	"\x06linked\x18\x01 \x01(\bH\x00R\x06linked\x88\x01\x01\x12\x1d\n" +
	"\apending\x18\x02 \x01(\bH\x01R\apending\x88\x01\x01\x127\n" +
	"\x15post_pending_transfer\x18\x03 \x01(\bH\x02R\x13postPendingTransfer\x88\x01\x01\x127\n" +
	"\x15void_pending_transfer\x18\x04 \x01(\bH\x03R\x13voidPendingTransfer\x88\x01\x01\x12,\n" +
	"\x0fbalancing_debit\x18\x05 \x01(\bH\x04R\x0ebalancingDebit\x88\x01\x01\x12.\n" +
	"\x10balancing_credit\x18\x06 \x01(\bH\x05R\x0fbalancingCredit\x88\x01\x01\x12(\n" +
	"\rclosing_debit\x18\a \x01(\bH\x06R\fclosingDebit\x88\x01\x01\x12*\n" +
	"\x0eclosing_credit\x18\b \x01(\bH\aR\rclosingCredit\x88\x01\x01\x12\x1f\n" +
	"\bimported\x18\t \x01(\bH\bR\bimported\x88\x01\x01B\t\n" +
	"\a_linkedB\n" +
	"\n" +
	"\b_pendingB\x18\n" +
	"\x16_post_pending_transferB\x18\n" +
	"\x16_void_pending_transferB\x12\n" +
	"\x10_balancing_debitB\x13\n" +
	"\x11_balancing_creditB\x10\n" +
	"\x0e_closing_debitB\x11\n" +
	"\x0f_closing_creditB\v\n" +
	"\t_imported\"\xfc\x01\n" +
	"\rAccountFilter\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12(\n" +
	"\rtimestamp_min\x18\x02 \x01(\x04H\x00R\ftimestampMin\x88\x01\x01\x12(\n" +
	"\rtimestamp_max\x18\x03 \x01(\x04H\x01R\ftimestampMax\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\rR\x05limit\x124\n" +
	"\x05flags\x18\x05 \x01(\v2\x19.proto.AccountFilterFlagsH\x02R\x05flags\x88\x01\x01B\x10\n" +
	"\x0e_timestamp_minB\x10\n" +
	"\x0e_timestamp_maxB\b\n" +
	"\x06_flags\"\x95\x01\n" +
	"\x12AccountFilterFlags\x12\x1b\n" +
	"\x06debits\x18\x01 \x01(\bH\x00R\x06debits\x88\x01\x01\x12\x1d\n" +
	"\acredits\x18\x02 \x01(\bH\x01R\acredits\x88\x01\x01\x12\x1f\n" +
	"\breversed\x18\x03 \x01(\bH\x02R\breversed\x88\x01\x01B\t\n" +
	"\a_debitsB\n" +
	"\n" +
	"\b_creditsB\v\n" +
	"\t_reversed\"\xca\x01\n" +
	"\x0eAccountBalance\x12%\n" +
	"\x0edebits_pending\x18\x01 \x01(\x04R\rdebitsPending\x12#\n" +
	"\rdebits_posted\x18\x02 \x01(\x04R\fdebitsPosted\x12'\n" +
	"\x0fcredits_pending\x18\x03 \x01(\x04R\x0ecreditsPending\x12%\n" +
	"\x0ecredits_posted\x18\x04 \x01(\x04R\rcreditsPosted\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x04R\ttimestamp\"\xc8\x03\n" +
	"\vQueryFilter\x12&\n" +
	"\fuser_data128\x18\x01 \x01(\tH\x00R\vuserData128\x88\x01\x01\x12$\n" +
	"\vuser_data64\x18\x02 \x01(\x04H\x01R\n" +
	"userData64\x88\x01\x01\x12$\n" +
	"\vuser_data32\x18\x03 \x01(\rH\x02R\n" +
	"userData32\x88\x01\x01\x12\x17\n" +
	"\x04code\x18\x04 \x01(\rH\x03R\x04code\x88\x01\x01\x12\x1b\n" +
	"\x06ledger\x18\x05 \x01(\rH\x04R\x06ledger\x88\x01\x01\x12(\n" +
	"\rtimestamp_min\x18\x06 \x01(\x04H\x05R\ftimestampMin\x88\x01\x01\x12(\n" +
	"\rtimestamp_max\x18\a \x01(\x04H\x06R\ftimestampMax\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\b \x01(\rR\x05limit\x122\n" +
	"\x05flags\x18\t \x01(\v2\x17.proto.QueryFilterFlagsH\aR\x05flags\x88\x01\x01B\x0f\n" +
	"\r_user_data128B\x0e\n" +
	"\f_user_data64B\x0e\n" +
	"\f_user_data32B\a\n" +
	"\x05_codeB\t\n" +
	"\a_ledgerB\x10\n" +
	"\x0e_timestamp_minB\x10\n" +
	"\x0e_timestamp_maxB\b\n" +
	"\x06_flags\"@\n" +
	"\x10QueryFilterFlags\x12\x1f\n" +
	"\breversed\x18\x01 \x01(\bH\x00R\breversed\x88\x01\x01B\v\n" +
	"\t_reversed*\xbb\a\n" +
	"\x13CreateAccountResult\x12\r\n" +
	"\tAccountOK\x10\x00\x12\x1c\n" +
	"\x18AccountLinkedEventFailed\x10\x01\x12\x1f\n" +
	"\x1bAccountLinkedEventChainOpen\x10\x02\x12 \n" +
	"\x1cAccountImportedEventExpected\x10\x16\x12#\n" +
	"\x1fAccountImportedEventNotExpected\x10\x17\x12\x1e\n" +
	"\x1aAccountTimestampMustBeZero\x10\x03\x12+\n" +
	"'AccountImportedEventTimestampOutOfRange\x10\x18\x12/\n" +
	"+AccountImportedEventTimestampMustNotAdvance\x10\x19\x12\x18\n" +
	"\x14AccountReservedField\x10\x04\x12\x17\n" +
	"\x13AccountReservedFlag\x10\x05\x12\x1a\n" +
	"\x16AccountIDMustNotBeZero\x10\x06\x12\x1c\n" +
	"\x18AccountIDMustNotBeIntMax\x10\a\x12#\n" +
	"\x1fAccountExistsWithDifferentFlags\x10\x0f\x12)\n" +
	"%AccountExistsWithDifferentUserData128\x10\x10\x12(\n" +
	"$AccountExistsWithDifferentUserData64\x10\x11\x12(\n" +
	"$AccountExistsWithDifferentUserData32\x10\x12\x12$\n" +
	" AccountExistsWithDifferentLedger\x10\x13\x12\"\n" +
	"\x1eAccountExistsWithDifferentCode\x10\x14\x12\x11\n" +
	"\rAccountExists\x10\x15\x12$\n" +
	" AccountFlagsAreMutuallyExclusive\x10\b\x12\"\n" +
	"\x1eAccountDebitsPendingMustBeZero\x10\t\x12!\n" +
	"\x1dAccountDebitsPostedMustBeZero\x10\n" +
	"\x12#\n" +
	"\x1fAccountCreditsPendingMustBeZero\x10\v\x12\"\n" +
	"\x1eAccountCreditsPostedMustBeZero\x10\f\x12\x1e\n" +
	"\x1aAccountLedgerMustNotBeZero\x10\r\x12\x1c\n" +
	"\x18AccountCodeMustNotBeZero\x10\x0e\x12/\n" +
	"+AccountImportedEventTimestampMustNotRegress\x10\x1a*\x98\x15\n" +
	"\x14CreateTransferResult\x12\x0e\n" +
	"\n" +
	"TransferOK\x10\x00\x12\x1d\n" +
	"\x19TransferLinkedEventFailed\x10\x01\x12 \n" +
	"\x1cTransferLinkedEventChainOpen\x10\x02\x12!\n" +
	"\x1dTransferImportedEventExpected\x108\x12$\n" +
	" TransferImportedEventNotExpected\x109\x12\x1f\n" +
	"\x1bTransferTimestampMustBeZero\x10\x03\x12,\n" +
	"(TransferImportedEventTimestampOutOfRange\x10:\x120\n" +
	",TransferImportedEventTimestampMustNotAdvance\x10;\x12\x18\n" +
	"\x14TransferReservedFlag\x10\x04\x12\x1b\n" +
	"\x17TransferIDMustNotBeZero\x10\x05\x12\x1d\n" +
	"\x19TransferIDMustNotBeIntMax\x10\x06\x12$\n" +
	" TransferExistsWithDifferentFlags\x10$\x12(\n" +
	"$TransferExistsWithDifferentPendingID\x10(\x12&\n" +
	"\"TransferExistsWithDifferentTimeout\x10,\x12-\n" +
	")TransferExistsWithDifferentDebitAccountID\x10%\x12.\n" +
	"*TransferExistsWithDifferentCreditAccountID\x10&\x12%\n" +
	"!TransferExistsWithDifferentAmount\x10'\x12*\n" +
	"&TransferExistsWithDifferentUserData128\x10)\x12)\n" +
	"%TransferExistsWithDifferentUserData64\x10*\x12)\n" +
	"%TransferExistsWithDifferentUserData32\x10+\x12%\n" +
	"!TransferExistsWithDifferentLedger\x10C\x12#\n" +
	"\x1fTransferExistsWithDifferentCode\x10-\x12\x12\n" +
	"\x0eTransferExists\x10.\x12\x1b\n" +
	"\x17TransferIDAlreadyFailed\x10D\x12%\n" +
	"!TransferFlagsAreMutuallyExclusive\x10\a\x12'\n" +
	"#TransferDebitAccountIDMustNotBeZero\x10\b\x12)\n" +
	"%TransferDebitAccountIDMustNotBeIntMax\x10\t\x12(\n" +
	"$TransferCreditAccountIDMustNotBeZero\x10\n" +
	"\x12*\n" +
	"&TransferCreditAccountIDMustNotBeIntMax\x10\v\x12#\n" +
	"\x1fTransferAccountsMustBeDifferent\x10\f\x12\x1f\n" +
	"\x1bTransferPendingIDMustBeZero\x10\r\x12\"\n" +
	"\x1eTransferPendingIDMustNotBeZero\x10\x0e\x12$\n" +
	" TransferPendingIDMustNotBeIntMax\x10\x0f\x12$\n" +
	" TransferPendingIDMustBeDifferent\x10\x10\x12-\n" +
	")TransferTimeoutReservedForPendingTransfer\x10\x11\x12(\n" +
	"$TransferClosingTransferMustBePending\x10@\x12\x1f\n" +
	"\x1bTransferAmountMustNotBeZero\x10\x12\x12\x1f\n" +
	"\x1bTransferLedgerMustNotBeZero\x10\x13\x12\x1d\n" +
	"\x19TransferCodeMustNotBeZero\x10\x14\x12 \n" +
	"\x1cTransferDebitAccountNotFound\x10\x15\x12!\n" +
	"\x1dTransferCreditAccountNotFound\x10\x16\x12)\n" +
	"%TransferAccountsMustHaveTheSameLedger\x10\x17\x123\n" +
	"/TransferTransferMustHaveTheSameLedgerAsAccounts\x10\x18\x12#\n" +
	"\x1fTransferPendingTransferNotFound\x10\x19\x12%\n" +
	"!TransferPendingTransferNotPending\x10\x1a\x125\n" +
	"1TransferPendingTransferHasDifferentDebitAccountID\x10\x1b\x126\n" +
	"2TransferPendingTransferHasDifferentCreditAccountID\x10\x1c\x12-\n" +
	")TransferPendingTransferHasDifferentLedger\x10\x1d\x12+\n" +
	"'TransferPendingTransferHasDifferentCode\x10\x1e\x12(\n" +
	"$TransferExceedsPendingTransferAmount\x10\x1f\x12-\n" +
	")TransferPendingTransferHasDifferentAmount\x10 \x12(\n" +
	"$TransferPendingTransferAlreadyPosted\x10!\x12(\n" +
	"$TransferPendingTransferAlreadyVoided\x10\"\x12\"\n" +
	"\x1eTransferPendingTransferExpired\x10#\x120\n" +
	",TransferImportedEventTimestampMustNotRegress\x10<\x12:\n" +
	"6TransferImportedEventTimestampMustPostdateDebitAccount\x10=\x12;\n" +
	"7TransferImportedEventTimestampMustPostdateCreditAccount\x10>\x12*\n" +
	"&TransferImportedEventTimeoutMustBeZero\x10?\x12%\n" +
	"!TransferDebitAccountAlreadyClosed\x10A\x12&\n" +
	"\"TransferCreditAccountAlreadyClosed\x10B\x12\"\n" +
	"\x1eTransferOverflowsDebitsPending\x10/\x12#\n" +
	"\x1fTransferOverflowsCreditsPending\x100\x12!\n" +
	"\x1dTransferOverflowsDebitsPosted\x101\x12\"\n" +
	"\x1eTransferOverflowsCreditsPosted\x102\x12\x1b\n" +
	"\x17TransferOverflowsDebits\x103\x12\x1c\n" +
	"\x18TransferOverflowsCredits\x104\x12\x1c\n" +
	"\x18TransferOverflowsTimeout\x105\x12\x1a\n" +
	"\x16TransferExceedsCredits\x106\x12\x19\n" +
	"\x15TransferExceedsDebits\x1072\xce\x05\n" +
	"\vTigerBeetle\x121\n" +
	"\x05GetID\x12\x13.proto.GetIDRequest\x1a\x11.proto.GetIDReply\"\x00\x12L\n" +
	"\x0eCreateAccounts\x12\x1c.proto.CreateAccountsRequest\x1a\x1a.proto.CreateAccountsReply\"\x00\x12O\n" +
	"\x0fCreateTransfers\x12\x1d.proto.CreateTransfersRequest\x1a\x1b.proto.CreateTransfersReply\"\x00\x12L\n" +
	"\x0eLookupAccounts\x12\x1c.proto.LookupAccountsRequest\x1a\x1a.proto.LookupAccountsReply\"\x00\x12O\n" +
	"\x0fLookupTransfers\x12\x1d.proto.LookupTransfersRequest\x1a\x1b.proto.LookupTransfersReply\"\x00\x12[\n" +
	"\x13GetAccountTransfers\x12!.proto.GetAccountTransfersRequest\x1a\x1f.proto.GetAccountTransfersReply\"\x00\x12X\n" +
	"\x12GetAccountBalances\x12 .proto.GetAccountBalancesRequest\x1a\x1e.proto.GetAccountBalancesReply\"\x00\x12L\n" +
	"\x0eQueryTransfers\x12\x1c.proto.QueryTransfersRequest\x1a\x1a.proto.QueryTransfersReply\"\x00\x12I\n" +
	"\rQueryAccounts\x12\x1b.proto.QueryAccountsRequest\x1a\x19.proto.QueryAccountsReply\"\x00BO\n" +
	"!nl.last.li.tigerbeetle_grpc.protoB\x10TigerBeetleProtoP\x01Z\x16tigerbeetle_grpc/protob\x06proto3"

var (
	file_proto_tigerbeetle_proto_rawDescOnce sync.Once
	file_proto_tigerbeetle_proto_rawDescData []byte
)

func file_proto_tigerbeetle_proto_rawDescGZIP() []byte {
	file_proto_tigerbeetle_proto_rawDescOnce.Do(func() {
		file_proto_tigerbeetle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_tigerbeetle_proto_rawDesc), len(file_proto_tigerbeetle_proto_rawDesc)))
	})
	return file_proto_tigerbeetle_proto_rawDescData
}

var file_proto_tigerbeetle_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_tigerbeetle_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_proto_tigerbeetle_proto_goTypes = []any{
	(CreateAccountResult)(0),           // 0: proto.CreateAccountResult
	(CreateTransferResult)(0),          // 1: proto.CreateTransferResult
	(*GetIDRequest)(nil),               // 2: proto.GetIDRequest
	(*GetIDReply)(nil),                 // 3: proto.GetIDReply
	(*CreateAccountsRequest)(nil),      // 4: proto.CreateAccountsRequest
	(*CreateAccountsReply)(nil),        // 5: proto.CreateAccountsReply
	(*CreateAccountsReplyItem)(nil),    // 6: proto.CreateAccountsReplyItem
	(*CreateTransfersRequest)(nil),     // 7: proto.CreateTransfersRequest
	(*CreateTransfersReply)(nil),       // 8: proto.CreateTransfersReply
	(*CreateTransfersReplyItem)(nil),   // 9: proto.CreateTransfersReplyItem
	(*LookupAccountsRequest)(nil),      // 10: proto.LookupAccountsRequest
	(*LookupAccountsReply)(nil),        // 11: proto.LookupAccountsReply
	(*LookupTransfersRequest)(nil),     // 12: proto.LookupTransfersRequest
	(*LookupTransfersReply)(nil),       // 13: proto.LookupTransfersReply
	(*GetAccountTransfersRequest)(nil), // 14: proto.GetAccountTransfersRequest
	(*GetAccountTransfersReply)(nil),   // 15: proto.GetAccountTransfersReply
	(*GetAccountBalancesRequest)(nil),  // 16: proto.GetAccountBalancesRequest
	(*GetAccountBalancesReply)(nil),    // 17: proto.GetAccountBalancesReply
	(*QueryTransfersRequest)(nil),      // 18: proto.QueryTransfersRequest
	(*QueryTransfersReply)(nil),        // 19: proto.QueryTransfersReply
	(*QueryAccountsRequest)(nil),       // 20: proto.QueryAccountsRequest
	(*QueryAccountsReply)(nil),         // 21: proto.QueryAccountsReply
	(*Account)(nil),                    // 22: proto.Account
	(*AccountFlags)(nil),               // 23: proto.AccountFlags
	(*Transfer)(nil),                   // 24: proto.Transfer
	(*TransferFlags)(nil),              // 25: proto.TransferFlags
	(*AccountFilter)(nil),              // 26: proto.AccountFilter
	(*AccountFilterFlags)(nil),         // 27: proto.AccountFilterFlags
	(*AccountBalance)(nil),             // 28: proto.AccountBalance
	(*QueryFilter)(nil),                // 29: proto.QueryFilter
	(*QueryFilterFlags)(nil),           // 30: proto.QueryFilterFlags
}
var file_proto_tigerbeetle_proto_depIdxs = []int32{
	22, // 0: proto.CreateAccountsRequest.accounts:type_name -> proto.Account
	6,  // 1: proto.CreateAccountsReply.results:type_name -> proto.CreateAccountsReplyItem
	0,  // 2: proto.CreateAccountsReplyItem.result:type_name -> proto.CreateAccountResult
	24, // 3: proto.CreateTransfersRequest.transfers:type_name -> proto.Transfer
	9,  // 4: proto.CreateTransfersReply.results:type_name -> proto.CreateTransfersReplyItem
	1,  // 5: proto.CreateTransfersReplyItem.result:type_name -> proto.CreateTransferResult
	22, // 6: proto.LookupAccountsReply.accounts:type_name -> proto.Account
	24, // 7: proto.LookupTransfersReply.transfers:type_name -> proto.Transfer
	26, // 8: proto.GetAccountTransfersRequest.filter:type_name -> proto.AccountFilter
	24, // 9: proto.GetAccountTransfersReply.transfers:type_name -> proto.Transfer
	26, // 10: proto.GetAccountBalancesRequest.filter:type_name -> proto.AccountFilter
	28, // 11: proto.GetAccountBalancesReply.account_balances:type_name -> proto.AccountBalance
	29, // 12: proto.QueryTransfersRequest.filter:type_name -> proto.QueryFilter
	24, // 13: proto.QueryTransfersReply.transfers:type_name -> proto.Transfer
	29, // 14: proto.QueryAccountsRequest.filter:type_name -> proto.QueryFilter
	22, // 15: proto.QueryAccountsReply.accounts:type_name -> proto.Account
	23, // 16: proto.Account.flags:type_name -> proto.AccountFlags
	25, // 17: proto.Transfer.transfer_flags:type_name -> proto.TransferFlags
	27, // 18: proto.AccountFilter.flags:type_name -> proto.AccountFilterFlags
	30, // 19: proto.QueryFilter.flags:type_name -> proto.QueryFilterFlags
	2,  // 20: proto.TigerBeetle.GetID:input_type -> proto.GetIDRequest
	4,  // 21: proto.TigerBeetle.CreateAccounts:input_type -> proto.CreateAccountsRequest
	7,  // 22: proto.TigerBeetle.CreateTransfers:input_type -> proto.CreateTransfersRequest
	10, // 23: proto.TigerBeetle.LookupAccounts:input_type -> proto.LookupAccountsRequest
	12, // 24: proto.TigerBeetle.LookupTransfers:input_type -> proto.LookupTransfersRequest
	14, // 25: proto.TigerBeetle.GetAccountTransfers:input_type -> proto.GetAccountTransfersRequest
	16, // 26: proto.TigerBeetle.GetAccountBalances:input_type -> proto.GetAccountBalancesRequest
	18, // 27: proto.TigerBeetle.QueryTransfers:input_type -> proto.QueryTransfersRequest
	20, // 28: proto.TigerBeetle.QueryAccounts:input_type -> proto.QueryAccountsRequest
	3,  // 29: proto.TigerBeetle.GetID:output_type -> proto.GetIDReply
	5,  // 30: proto.TigerBeetle.CreateAccounts:output_type -> proto.CreateAccountsReply
	8,  // 31: proto.TigerBeetle.CreateTransfers:output_type -> proto.CreateTransfersReply
	11, // 32: proto.TigerBeetle.LookupAccounts:output_type -> proto.LookupAccountsReply
	13, // 33: proto.TigerBeetle.LookupTransfers:output_type -> proto.LookupTransfersReply
	15, // 34: proto.TigerBeetle.GetAccountTransfers:output_type -> proto.GetAccountTransfersReply
	17, // 35: proto.TigerBeetle.GetAccountBalances:output_type -> proto.GetAccountBalancesReply
	19, // 36: proto.TigerBeetle.QueryTransfers:output_type -> proto.QueryTransfersReply
	21, // 37: proto.TigerBeetle.QueryAccounts:output_type -> proto.QueryAccountsReply
	29, // [29:38] is the sub-list for method output_type
	20, // [20:29] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_tigerbeetle_proto_init() }
func file_proto_tigerbeetle_proto_init() {
	if File_proto_tigerbeetle_proto != nil {
		return
	}
	file_proto_tigerbeetle_proto_msgTypes[21].OneofWrappers = []any{}
	file_proto_tigerbeetle_proto_msgTypes[22].OneofWrappers = []any{}
	file_proto_tigerbeetle_proto_msgTypes[23].OneofWrappers = []any{}
	file_proto_tigerbeetle_proto_msgTypes[24].OneofWrappers = []any{}
	file_proto_tigerbeetle_proto_msgTypes[25].OneofWrappers = []any{}
	file_proto_tigerbeetle_proto_msgTypes[27].OneofWrappers = []any{}
	file_proto_tigerbeetle_proto_msgTypes[28].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_tigerbeetle_proto_rawDesc), len(file_proto_tigerbeetle_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_tigerbeetle_proto_goTypes,
		DependencyIndexes: file_proto_tigerbeetle_proto_depIdxs,
		EnumInfos:         file_proto_tigerbeetle_proto_enumTypes,
		MessageInfos:      file_proto_tigerbeetle_proto_msgTypes,
	}.Build()
	File_proto_tigerbeetle_proto = out.File
	file_proto_tigerbeetle_proto_goTypes = nil
	file_proto_tigerbeetle_proto_depIdxs = nil
}
