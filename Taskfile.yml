version: "3"

vars:
  BINFILE: tigerbeetle_rest_server

tasks:
  default: task --list-all
  dev: 
    cmds: 
      - task -p dev:run
  start:
    cmds:
      - task: build
      - task: build:start
  build:
    cmds:
      - task: build:run

  release:
    cmds:
      - cmd: CC="zig cc -target x86_64-linux" CXX="zig c++ -target x86_64-linux" CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o build/tigerbeetle_api_linux_amd64 main.go
        platforms: [darwin]
      - cmd: CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -o build/tigerbeetle_api_darwin_arm64 main.go
        platforms: [darwin]
      - cmd: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o build/tigerbeetle_api_linux_amd64 main.go
        platforms: [linux]
  release:run:
    - cmd: ./build/tigerbeetle_api_darwin_arm64
      platforms: [darwin]
    - cmd: ./build/tigerbeetle_api_linux_amd64
      platforms: [linux]
  release:setup:darwin:
    desc: Install cross-compilation toolchain for darwin
    preconditions: 
      - sh: "! brew list zig"
    platforms: [darwin]
    cmds:
      - cmd: brew install zig

  # Docker
  docker:start: cd docker_dev; docker compose up -d
  docker:stop: cd docker_dev; docker compose stop
  docker:setup: cd docker_dev; docker compose pull && docker compose run tigerbeetle format --cluster=0 --replica=0 --replica-count=1 /data/0_0.tigerbeetle
  docker:remove: cd docker_dev;  docker compose down -v --remove-orphans

  # Internal
  build:start: ./{{.BINFILE}}
  build:run:
    internal: true
    cmds:
      - go build -o {{.BINFILE}}  
  dev:run: task dev:run:watch
  dev:run:watch:
    watch: true
    sources:
      - "**/*.go"
    cmds:
      - task: build:run
      - task build:start
